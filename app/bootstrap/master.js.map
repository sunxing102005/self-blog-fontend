{
    "version": 3,
    "sources": [
        "../../src/bootstrap/master.js"
    ],
    "names": [
        "fs",
        "require",
        "think",
        "beforeStartServer",
        "env",
        "existsSync",
        "ROOT_PATH",
        "mkdirSync",
        "minify",
        "views",
        "readdirSync",
        "forEach",
        "val",
        "index",
        "indexOf",
        "data",
        "readFileSync",
        "minifyData",
        "removeComments",
        "collapseWhitespace",
        "minifyJS",
        "minifyCSS",
        "writeFileSync",
        "client",
        "AggregatorRegistry",
        "aggregatorRegistry",
        "Koa",
        "Router",
        "app",
        "router",
        "get",
        "ctx",
        "next",
        "metrics",
        "clusterMetrics",
        "type",
        "contentType",
        "body",
        "use",
        "routes",
        "allowedMethods",
        "listen"
    ],
    "mappings": ";;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACAC,MAAMC,iBAAN,mBAAwB,aAAW;AACjC;AACA;AACA,MAAID,MAAME,GAAN,KAAc,YAAlB,EAAgC;AAC9B,QAAI,CAACJ,GAAGK,UAAH,CAAcH,MAAMI,SAAN,GAAkB,gBAAhC,CAAL,EAAwD;AACtDN,SAAGO,SAAH,CAAaL,MAAMI,SAAN,GAAkB,gBAA/B;AACD;AACD,QAAIE,SAASP,QAAQ,eAAR,EAAyBO,MAAtC;AACA,UAAMC,QAAQT,GAAGU,WAAH,CAAeR,MAAMI,SAAN,GAAkB,OAAjC,CAAd;;AAEAG,UAAME,OAAN,CAAc,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC5B,UAAID,IAAIE,OAAJ,CAAY,GAAZ,IAAmB,CAAvB,EAA0B;AACxB,cAAMC,OAAOf,GAAGgB,YAAH,CACXd,MAAMI,SAAN,GAAkB,QAAlB,GAA6BM,GADlB,EAEX,MAFW,CAAb;AAIA,cAAMK,aAAaT,OAAOO,IAAP,EAAa;AAC9BG,0BAAgB,IADc;AAE9BC,8BAAoB,IAFU;AAG9BC,oBAAU,IAHoB;AAI9BC,qBAAW;AAJmB,SAAb,CAAnB;AAMArB,WAAGsB,aAAH,CACEpB,MAAMI,SAAN,GAAkB,gBAAlB,GAAqCM,GADvC,EAEEK,UAFF;AAID;AACF,KAjBD;AAkBD;AACF,CA7BD;;AA+BA;AACA,MAAMM,SAAStB,QAAQ,aAAR,CAAf;AACA,MAAMuB,qBAAqBD,OAAOC,kBAAlC;AACA,MAAMC,qBAAqB,IAAID,kBAAJ,EAA3B;;AAEA,IAAIE,MAAMzB,QAAQ,KAAR,CAAV;AACA,IAAI0B,SAAS1B,QAAQ,YAAR,CAAb;;AAEA,IAAI2B,MAAM,IAAIF,GAAJ,EAAV;AACA,IAAIG,SAAS,IAAIF,MAAJ,EAAb;;AAEAE,OAAOC,GAAP,CAAW,aAAX;AAAA,gCAA0B,WAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5C,UAAMC,UAAU,MAAMR,mBAAmBS,cAAnB,EAAtB;AACAH,QAAII,IAAJ,GAAWV,mBAAmBW,WAA9B;AACAL,QAAIM,IAAJ,GAAWJ,OAAX;AACD,GAJD;;AAAA;AAAA;AAAA;AAAA;;AAMAL,IAAIU,GAAJ,CAAQT,OAAOU,MAAP,EAAR,EAAyBD,GAAzB,CAA6BT,OAAOW,cAAP,EAA7B;;AAEAZ,IAAIa,MAAJ,CAAW,IAAX",
    "file": "../../src/bootstrap/master.js",
    "sourcesContent": [
        "const fs = require('fs');\nthink.beforeStartServer(async() => {\n  // 压缩模板\n  // think.logger.info(\"think.env\", think.env);\n  if (think.env === 'production') {\n    if (!fs.existsSync(think.ROOT_PATH + '/runtime/view/')) {\n      fs.mkdirSync(think.ROOT_PATH + '/runtime/view/');\n    }\n    var minify = require('html-minifier').minify;\n    const views = fs.readdirSync(think.ROOT_PATH + '/view');\n\n    views.forEach((val, index) => {\n      if (val.indexOf('.') > 0) {\n        const data = fs.readFileSync(\n          think.ROOT_PATH + '/view/' + val,\n          'utf8'\n        );\n        const minifyData = minify(data, {\n          removeComments: true,\n          collapseWhitespace: true,\n          minifyJS: true,\n          minifyCSS: true\n        });\n        fs.writeFileSync(\n          think.ROOT_PATH + '/runtime/view/' + val,\n          minifyData\n        );\n      }\n    });\n  }\n});\n\n// 设置prometheus metric\nconst client = require('prom-client');\nconst AggregatorRegistry = client.AggregatorRegistry;\nconst aggregatorRegistry = new AggregatorRegistry();\n\nvar Koa = require('koa');\nvar Router = require('koa-router');\n\nvar app = new Koa();\nvar router = new Router();\n\nrouter.get('/prometheus', async(ctx, next) => {\n  const metrics = await aggregatorRegistry.clusterMetrics();\n  ctx.type = aggregatorRegistry.contentType;\n  ctx.body = metrics;\n});\n\napp.use(router.routes()).use(router.allowedMethods());\n\napp.listen(3002);\n"
    ]
}
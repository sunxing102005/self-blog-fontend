{
    "version": 3,
    "sources": [
        "../../src/controller/base.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Controller",
        "__before",
        "config",
        "model",
        "getList",
        "assign",
        "site",
        "user",
        "cache",
        "find",
        "JSON",
        "stringify",
        "recent",
        "getRecent",
        "content",
        "where",
        "status",
        "type",
        "category_id",
        "limit",
        "order",
        "fieldReverse",
        "select",
        "comment",
        "alias",
        "join",
        "table",
        "joint",
        "as",
        "on",
        "field"
    ],
    "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,UAApB,CAA+B;AACxCC,UAAN,GAAiB;AAAA;;AAAA;AACf,YAAMC,SAAS,MAAMH,MAAMI,KAAN,CAAY,QAAZ,EAAsBC,OAAtB,EAArB;AACA,YAAKC,MAAL,CAAY,MAAZ,EAAoBH,OAAOI,IAA3B;;AAEA,YAAMC,OAAO,MAAM,MAAKJ,KAAL,CAAW,MAAX,EAChBK,KADgB,CACV,MADU,EAEhBC,IAFgB,EAAnB;AAGA,YAAKJ,MAAL,CAAY,MAAZ,EAAoBK,KAAKC,SAAL,CAAeJ,IAAf,CAApB;AACA,YAAMK,SAAS,MAAM,MAAKC,SAAL,EAArB;AACA,YAAKR,MAAL,CAAY,QAAZ,EAAsBK,KAAKC,SAAL,CAAeC,MAAf,CAAtB;AACA,YAAKP,MAAL,CAAY,OAAZ,EAAqB,EAArB;AAVe;AAWhB;AACKQ,WAAN,GAAkB;AAAA;;AAAA;AAChB,YAAMC,UAAU,MAAM,OAAKX,KAAL,CAAW,SAAX,EACnBY,KADmB,CACb,EAAEC,QAAQ,EAAV,EAAcC,MAAM,MAApB,EAA4BC,aAAa,CAAC,IAAD,EAAO,CAAC,CAAD,EAAI,CAAJ,CAAP,CAAzC,EADa,EAEnBV,KAFmB,CAEb,gBAFa,EAGnBW,KAHmB,CAGb,CAHa,EAInBC,KAJmB,CAIb,kBAJa,EAKnBC,YALmB,CAKN,kBALM,EAMnBC,MANmB,EAAtB;AAOA,YAAMC,UAAU,MAAM,OAAKpB,KAAL,CAAW,SAAX,EACnBK,KADmB,CACb,gBADa,EAEnBgB,KAFmB,CAEb,SAFa,EAGnBC,IAHmB,CAGd;AACJC,eAAO,SADH;AAEJC,eAAO,MAFH;AAGJC,YAAI,SAHA;AAIJC,YAAI,CAAC,YAAD,EAAe,IAAf;AAJA,OAHc,EASnBJ,IATmB,CASd;AACJC,eAAO,MADH;AAEJD,cAAM,MAFF;AAGJG,YAAI,UAHA;AAIJC,YAAI,CAAC,qBAAD,EAAwB,IAAxB;AAJA,OATc,EAenBd,KAfmB,CAeb,EAAE,kBAAkB,EAApB,EAfa,EAgBnBe,KAhBmB,CAiBlB,sEAjBkB,EAmBnBX,KAnBmB,CAmBb,CAnBa,EAoBnBC,KApBmB,CAoBb,0BApBa,EAqBnBE,MArBmB,EAAtB;AAsBA,aAAO,EAAER,OAAF,EAAWS,OAAX,EAAP;AA9BgB;AA+BjB;AA5C6C,CAAhD",
    "file": "../../src/controller/base.js",
    "sourcesContent": [
        "module.exports = class extends think.Controller {\n  async __before() {\n    const config = await think.model('config').getList();\n    this.assign('site', config.site);\n\n    const user = await this.model('user')\n      .cache('user')\n      .find();\n    this.assign('user', JSON.stringify(user));\n    const recent = await this.getRecent();\n    this.assign('recent', JSON.stringify(recent));\n    this.assign('title', '');\n  }\n  async getRecent() {\n    const content = await this.model('content')\n      .where({ status: 99, type: 'post', category_id: ['IN', [1, 2]] })\n      .cache('recent_content')\n      .limit(5)\n      .order('create_time desc')\n      .fieldReverse('content,markdown')\n      .select();\n    const comment = await this.model('comment')\n      .cache('recent_comment')\n      .alias('comment')\n      .join({\n        table: 'content',\n        joint: 'left',\n        as: 'content',\n        on: ['content_id', 'id']\n      })\n      .join({\n        table: 'meta',\n        join: 'left',\n        as: 'category',\n        on: ['content.category_id', 'id']\n      })\n      .where({ 'comment.status': 99 })\n      .field(\n        'comment.*,content.slug,content.category_id,category.slug as category'\n      )\n      .limit(5)\n      .order('comment.create_time desc')\n      .select();\n    return { content, comment };\n  }\n};\n"
    ]
}
{
    "version": 3,
    "sources": [
        "../../src/controller/base.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Controller",
        "__before",
        "config",
        "model",
        "getList",
        "assign",
        "site",
        "user",
        "cache",
        "find",
        "JSON",
        "stringify",
        "recent",
        "getRecent",
        "content",
        "where",
        "status",
        "type",
        "limit",
        "order",
        "fieldReverse",
        "select",
        "comment",
        "alias",
        "join",
        "table",
        "joint",
        "as",
        "on",
        "field"
    ],
    "mappings": ";;AAAAA,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,UAApB,CAA+B;AACtCC,YAAN,GAAiB;AAAA;;AAAA;AACb,kBAAMC,SAAS,MAAMH,MAAMI,KAAN,CAAY,QAAZ,EAAsBC,OAAtB,EAArB;AACA,kBAAKC,MAAL,CAAY,MAAZ,EAAoBH,OAAOI,IAA3B;;AAEA,kBAAMC,OAAO,MAAM,MAAKJ,KAAL,CAAW,MAAX,EACdK,KADc,CACR,MADQ,EAEdC,IAFc,EAAnB;AAGA,kBAAKJ,MAAL,CAAY,MAAZ,EAAoBK,KAAKC,SAAL,CAAeJ,IAAf,CAApB;AACA,kBAAMK,SAAS,MAAM,MAAKC,SAAL,EAArB;AACA,kBAAKR,MAAL,CAAY,QAAZ,EAAsBK,KAAKC,SAAL,CAAeC,MAAf,CAAtB;AACA,kBAAKP,MAAL,CAAY,OAAZ,EAAqB,EAArB;AAVa;AAWhB;AACKQ,aAAN,GAAkB;AAAA;;AAAA;AACd,kBAAMC,UAAU,MAAM,OAAKX,KAAL,CAAW,SAAX,EACjBY,KADiB,CACX,EAAEC,QAAQ,EAAV,EAAcC,MAAM,MAApB,EADW,EAEjBT,KAFiB,CAEX,gBAFW,EAGjBU,KAHiB,CAGX,CAHW,EAIjBC,KAJiB,CAIX,kBAJW,EAKjBC,YALiB,CAKJ,kBALI,EAMjBC,MANiB,EAAtB;AAOA,kBAAMC,UAAU,MAAM,OAAKnB,KAAL,CAAW,SAAX,EACjBK,KADiB,CACX,gBADW,EAEjBe,KAFiB,CAEX,SAFW,EAGjBC,IAHiB,CAGZ;AACFC,uBAAO,SADL;AAEFC,uBAAO,MAFL;AAGFC,oBAAI,SAHF;AAIFC,oBAAI,CAAC,YAAD,EAAe,IAAf;AAJF,aAHY,EASjBJ,IATiB,CASZ;AACFC,uBAAO,MADL;AAEFD,sBAAM,MAFJ;AAGFG,oBAAI,UAHF;AAIFC,oBAAI,CAAC,qBAAD,EAAwB,IAAxB;AAJF,aATY,EAejBb,KAfiB,CAeX,EAAE,kBAAkB,EAApB,EAfW,EAgBjBc,KAhBiB,CAiBd,sEAjBc,EAmBjBX,KAnBiB,CAmBX,CAnBW,EAoBjBC,KApBiB,CAoBX,0BApBW,EAqBjBE,MArBiB,EAAtB;AAsBA,mBAAO,EAAEP,OAAF,EAAWQ,OAAX,EAAP;AA9Bc;AA+BjB;AA5C2C,CAAhD",
    "file": "../../src/controller/base.js",
    "sourcesContent": [
        "module.exports = class extends think.Controller {\n    async __before() {\n        const config = await think.model(\"config\").getList();\n        this.assign(\"site\", config.site);\n\n        const user = await this.model(\"user\")\n            .cache(\"user\")\n            .find();\n        this.assign(\"user\", JSON.stringify(user));\n        const recent = await this.getRecent();\n        this.assign(\"recent\", JSON.stringify(recent));\n        this.assign(\"title\", \"\");\n    }\n    async getRecent() {\n        const content = await this.model(\"content\")\n            .where({ status: 99, type: \"post\" })\n            .cache(\"recent_content\")\n            .limit(5)\n            .order(\"create_time desc\")\n            .fieldReverse(\"content,markdown\")\n            .select();\n        const comment = await this.model(\"comment\")\n            .cache(\"recent_comment\")\n            .alias(\"comment\")\n            .join({\n                table: \"content\",\n                joint: \"left\",\n                as: \"content\",\n                on: [\"content_id\", \"id\"]\n            })\n            .join({\n                table: \"meta\",\n                join: \"left\",\n                as: \"category\",\n                on: [\"content.category_id\", \"id\"]\n            })\n            .where({ \"comment.status\": 99 })\n            .field(\n                \"comment.*,content.slug,content.category_id,category.slug as category\"\n            )\n            .limit(5)\n            .order(\"comment.create_time desc\")\n            .select();\n        return { content, comment };\n    }\n};\n"
    ]
}